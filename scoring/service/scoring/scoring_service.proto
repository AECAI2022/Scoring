syntax = 'proto3';

package scoring;

service Scoring{
    // When a new floorplan enters the database, add a boolean variable 'Updated' to show whether it is new. Then in the next scanning time, change the status to False.

    rpc GetNewGraph(time) returns (stream Floorplan) {}

    rpc GenerateGraph(Floorplan) returns (Graph) {}

	rpc GenerateScore(Graph) returns (Scores) {}
}

message time{
	string day = 1;
	// t is in the format "%H:%M:%S" using package datetime 
    string t = 2;
}



message Floorplan {
	string floorplan_path = 1;
	string id = 2;

}


message Graph{
	bool directed = 1;
	bool multigraph = 2;
	map<string, string> graph_attributes = 3;
	message node_info {
		message node_dict {
			double area = 1;
		    string value_id = 2;
		}
		repeated node_dict nodes = 1;
	}

	message link_info{
		message link_dict {
			string color = 1;
			double distance = 2;
			string source = 3;
			string target = 4;
		}
		repeated link_dict links = 1;
	}
}

message Scores{
	double score_commonarea = 1;
	double score_functional = 2;
	double score_corridor = 3;
	double score_connectivity_private = 4;
	double score_connectivity_public = 5;
}